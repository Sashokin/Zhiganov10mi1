# -*- coding: utf-8 -*-
import config
import telebot
from telebot import types
import my_markups
import config_for_token
from peewee import *
import dbhelp
import time
#todo: —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –º–µ–¥–≤–µ–¥–µ–π –ø–æ —Ç–µ–º–∞—Ç–∏–∫–µ, –∫–æ—Ä–∑–∏–Ω–∞, –∫—Ä–∞—Å–∏–≤—ã–π –≤—ã–≤–æ–¥ —Ñ–æ—Ç–æ+—Ç–µ–∫—Å—Ç

bot = telebot.TeleBot(config_for_token.token)


#db = SqliteDatabase('database.db')


@bot.message_handler(commands=['start'])
def send_welcome(message):
    ccid = message.chat.id
    cb = 0
    for p in dbhelp.User.select():
        if int(p.cid) == ccid:
            cb = 1
    if cb == 0:
        ccid = dbhelp.User(cid=ccid, type='0', name='none', phone='none', uvedl='1', orders='none', sendmes='0')
        ccid.save()
        bot.send_photo(message.chat.id, open('teddybears/start.jpg', 'rb'))
        bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç!üòä –Ø –±–æ—Ç –º–∞–≥–∞–∑–∏–Ω–∞ metoyou! –ê —Ç–µ–±—è —è –µ—â–µ –Ω–µ –∑–Ω–∞—éüòî', reply_markup=my_markups.start_page)
    else:
        for p in dbhelp.User.select():
            if int(p.cid) == ccid:
                if p.name == 'none':
                    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç!üòä –Ø –±–æ—Ç –º–∞–≥–∞–∑–∏–Ω–∞ metoyou! –ê —Ç–µ–±—è —è –¥–æ —Å–∏—Ö –ø–æ—Ä –Ω–µ –∑–Ω–∞—éüòî', reply_markup=my_markups.start_page)
                else:
                    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç, {} üòä'.format(p.name), reply_markup=my_markups.main_menu)


@bot.message_handler(commands=['help'])
def send_help(message):
    comtxt = open('commands.txt', encoding='utf-8')
    bot.send_message(message.chat.id, 'üìå–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:\n\n{}\n\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∏–∂–µ —Ä–∞–∑–¥–µ–ª —Å–ø—Ä–∞–≤–∫–∏'.format(comtxt.read()), reply_markup=my_markups.help_page)


@bot.message_handler(commands=['main'])
def main_menu(message):
    bot.send_message(message.chat.id, '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', reply_markup=my_markups.main_menu)


@bot.message_handler(content_types=['text'])
def main(message):
    ccid = message.chat.id
    enter_name = 0
    enter_mes = 0
    for p in dbhelp.User.select():
        if str(p.cid) == str(ccid):
            if p.type == '1':
                enter_name = 1
            if p.sendmes == '1':
                enter_mes = 1
    if message.text == '‚ùå–û—Ç–º–µ–Ω–∞':
        for p in dbhelp.User.select():
            if str(p.cid) == str(ccid):
                p.type = '0'
                p.save()
        bot.send_message(message.chat.id, '–•–æ—Ä–æ—à–æ, –≤–µ—Ä–Ω–µ–º—Å—è –∫ —ç—Ç–æ–º—É –ø–æ–∑–∂–µ', reply_markup=my_markups.main_menu)
    if message.text == '‚ùå–û—Ç–º–µ–Ω–∏—Ç—å':
        for p in dbhelp.User.select():
            if str(p.cid) == str(ccid):
                p.sendmes = '0'
                p.save()
        comtxt = open('commands.txt', encoding='utf-8')
        bot.send_message(message.chat.id, 'üìå–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:\n\n{}\n\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∏–∂–µ —Ä–∞–∑–¥–µ–ª —Å–ø—Ä–∞–≤–∫–∏'.format(comtxt.read()), reply_markup=my_markups.help_page)
    elif enter_name == 1:
        for p in dbhelp.User.select():
            if str(p.cid) == str(ccid):
                p.name = message.text
                p.type = '2'
                bot.send_message(message.chat.id, '–•–æ—Ä–æ—à–æ, {}, —è –∑–∞–ø–æ–º–Ω–∏–ªüòä'.format(p.name), reply_markup=my_markups.main_menu)
                p.save()
    elif enter_mes == 1:
        for p in dbhelp.User.select():
            if str(p.cid) == str(ccid):
                bot.send_message(680180012, '{}(@{} / @{}) –æ—Å—Ç–∞–≤–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ: \n{}'.format(p.name, message.from_user.username, message.chat.username, message.text))
                p.sendmes = '0'
                p.save()
                bot.send_message(message.chat.id, '‚å®Ô∏è–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ', reply_markup=my_markups.help_page)
    elif message.text == 'üö™–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é' or message.text == 'üö™–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        bot.send_message(message.chat.id, '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', reply_markup=my_markups.main_menu)
    elif message.text == '‚ùì–ü–æ–º–æ—â—å –∏ —Å–≤—è–∑—å' or message.text == '‚ùì–ü–æ–º–æ—â—å':
        comtxt = open('commands.txt', encoding='utf-8')
        bot.send_message(message.chat.id, 'üìå–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:\n\n{}\n\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∏–∂–µ —Ä–∞–∑–¥–µ–ª —Å–ø—Ä–∞–≤–∫–∏'.format(comtxt.read()), reply_markup=my_markups.help_page)
    elif message.text == 'üìã–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–∞ —Å–∞–π—Ç–µ':
        bot.send_message(message.chat.id, '–ï—Å–ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–∞ —Å–∞–π—Ç–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏', reply_markup=my_markups.to_site)
        bot.send_message(message.chat.id, '–°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏', reply_markup=my_markups.help_page)
    elif message.text == 'üìû–ü–æ–∑–≤–æ–Ω–∏—Ç—å':
        bot.send_message(message.chat.id, 'üìû +7(916)204-12-22\n\n–ì—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã:\n–ë—É–¥–Ω–∏ 9:00-21:00\n–°—É–±–±–æ—Ç–∞ 10:00-19:00', reply_markup=my_markups.help_page)
    elif message.text == '‚å®Ô∏è–ù–∞–ø–∏—Å–∞—Ç—å':
        bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –æ–Ω–æ —Å—Ä–∞–∑—É –±—É–¥–µ—Ç –ø–µ—Ä–µ–¥–∞–Ω–æ –Ω–∞–º', reply_markup=my_markups.enter_page2)
        for p in dbhelp.User.select():
            if str(p.cid) == str(ccid):
                p.sendmes = '1'
                p.save()
    elif message.text == 'üë§–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ':
        bot.send_message(message.chat.id, '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ', reply_markup=my_markups.personal_page)
    elif message.text == 'üîè–í–≤–µ—Å—Ç–∏ –∏–º—è':
        bot.send_message(message.chat.id, '–Ø –∑–∞–ø–æ–º–Ω—é –≤–≤–µ–¥–µ–Ω–Ω–æ–µ –∏–º—è', reply_markup=my_markups.enter_page)
        for p in dbhelp.User.select():
            if str(p.cid) == str(ccid):
                p.type = '1'
                p.save()
    elif message.text == 'üêª–ú–∏—à–∫–∏':
        bot.send_message(message.chat.id, '–ü–æ –∫–∞–∫–æ–º—É –ø–∞—Ä–∞–º–µ—Ç—Ä—É —Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –º–µ–¥–≤–µ–¥–µ–π?', reply_markup=my_markups.sort_page)
    elif message.text == 'üìè–ü–æ —Ä–∞–∑–º–µ—Ä—É':
        bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–º–µ—Ä –º–∏—à–∫–∏', reply_markup=my_markups.medved_page)
    elif message.text == 'üõí–í—ã–±—Ä–∞—Ç—å —Ç–æ–≤–∞—Ä':
        bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π —Ç–æ–≤–∞—Ä –∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—Éüòä', reply_markup=my_markups.menu_page)
    elif message.text == 'üîÆ–†–∞–∑–Ω–æ–µ':
        bot.send_message(message.chat.id, '–ò–∑–≤–∏–Ω–∏—Ç–µ, —Ç–æ–≤–∞—Ä–æ–≤ —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏üòî', reply_markup=my_markups.no_goods_page)
    elif message.text == '–ò–º—è':
        for p in dbhelp.User.select():
            if str(p.cid) == str(ccid):
                bot.send_message(message.chat.id, '–¢–µ–∫—É—â–µ–µ –∏–º—è: {} \n–ò–∑–º–µ–Ω–∏—Ç—å?'.format(p.name), reply_markup=my_markups.start_page)
    elif message.text == 'üéà–¢–æ–≤–∞—Ä—ã —Å–æ —Å–∫–∏–¥–∫–æ–π':
        for p in dbhelp.Product.select():
            if p.type == '1' and p.sale != '0':
                bot.send_message(message.chat.id, 'üêª{}, {} —Å–º., {} —Ä—É–±–ª–µ–π —Å —É—á–µ—Ç–æ–º —Å–∫–∏–¥–∫–∏'.format(p.name, p.size, p.price))
                bot.send_photo(message.chat.id, open('teddybears/{}.jpg'.format(p.theme), 'rb'),
                               reply_markup=check_available(p.available))
    elif message.text == 'üêª10-18 —Å–∞–Ω—Ç–∏–º–µ—Ç—Ä–æ–≤üêª':
        show_product('1', '1', message)
    elif message.text == 'üêª20 —Å–∞–Ω—Ç–∏–º–µ—Ç—Ä–æ–≤üêª':
        show_product('1', '2', message)
    elif message.text == 'üêª23-25 —Å–∞–Ω—Ç–∏–º–µ—Ç—Ä–æ–≤üêª':
        show_product('1', '3', message)
    elif message.text == 'üêª30 —Å–∞–Ω—Ç–∏–º–µ—Ç—Ä–æ–≤üêª':
        show_product('1', '4', message)
    elif message.text == 'üêª40-50 —Å–∞–Ω—Ç–∏–º–µ—Ç—Ä–æ–≤üêª':
        show_product('1', '5', message)
    elif message.text == 'üéâ–ü–æ —Ç–µ–º–∞—Ç–∏–∫–µ':
        bot.send_message(message.chat.id, '–†–∞–∑–¥–µ–ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µüòî')
    elif message.text == 'üéÅ–ü–æ–¥–∞—Ä–æ—á–Ω—ã–µ —É–ø–∞–∫–æ–≤–∫–∏':
        for p in dbhelp.Product.select():
            if p.type == '2':
                bot.send_message(message.chat.id, 'üéÅ{} {} —Å–º., {} —Ä—É–±–ª–µ–π '.format(p.name, p.size, p.price))
                bot.send_photo(message.chat.id, open('teddybears/{}.jpg'.format(p.theme), 'rb'),
                               reply_markup=check_available(p.available))
    else:
        comtxt = open('commands.txt', encoding='utf-8')
        bot.send_message(message.chat.id, 'üòü–ù–µ –ø–æ–Ω–∏–º–∞—é –í–∞—Å, –≤–æ—Ç —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:\n\n{}\n\n'.format(comtxt.read()), reply_markup=my_markups.go_to_main_menu)


def check_available(a):
    mkup1 = types.InlineKeyboardMarkup()
    mkup2 = types.InlineKeyboardMarkup()
    mkbt1 = types.InlineKeyboardButton(text="‚úÖ–¢–æ–≤–∞—Ä –≤ –Ω–∞–ª–∏—á–∏–∏", callback_data="test")
    mkbt2 = types.InlineKeyboardButton(text="‚ùå–¢–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏", callback_data="test")
    mkup1.add(mkbt1)
    mkup2.add(mkbt2)
    if a == '1':
        return mkup1
    else:
        return mkup2


def show_product(product_type, size_type, message):
    for p in dbhelp.Product.select():
        if p.type == product_type and p.size_type == size_type:
            bot.send_message(message.chat.id, 'üêª{}, {} —Å–º., {} —Ä—É–±–ª–µ–π'.format(p.name, p.size, p.price))
            bot.send_photo(message.chat.id, open('teddybears/{}.jpg'.format(p.theme), 'rb'),
                           reply_markup=check_available(p.available))



@bot.message_handler(content_types=['sticker', 'pinned_message', 'photo', 'audio', 'document'])
def answer_not_a_text(message):
    comtxt = open('commands.txt', encoding='utf-8')
    bot.send_message(message.chat.id, 'üòü–ù–µ –º–æ–≥—É –Ω–∏–∫–∞–∫ –Ω–∞ —ç—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç—å, –≤–æ—Ç —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥\n\n{}\n\n'.format(comtxt.read()), reply_markup=my_markups.go_to_main_menu)


if __name__ == '__main__':
    bot.polling(none_stop=True)
